// Mocks generated by Mockito 5.4.6 from annotations
// in zodart/test/mocks/record_type_named_field/record_type_named_field.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:analyzer/dart/element/type.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDartType_0 extends _i1.SmartFake implements _i2.DartType {
  _FakeDartType_0(Object parent, Invocation parentInvocation) : super(parent, parentInvocation);
}

/// A class which mocks [RecordTypeNamedField].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecordTypeNamedField extends _i1.Mock implements _i2.RecordTypeNamedField {
  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i3.dummyValue<String>(this, Invocation.getter(#name)),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  _i2.DartType get type =>
      (super.noSuchMethod(
            Invocation.getter(#type),
            returnValue: _FakeDartType_0(this, Invocation.getter(#type)),
            returnValueForMissingStub: _FakeDartType_0(
              this,
              Invocation.getter(#type),
            ),
          )
          as _i2.DartType);
}
