// Automatic schema type inference
// ignore_for_file: specify_nonobvious_property_types

import 'package:source_gen_test/annotations.dart';
import 'package:zodart/zodart.dart';

import '_helper_types.dart';

part 'goldens/zodart_new_class.dart';
part 'goldens/zodart_existing_class.dart';
part 'goldens/zodart_record.dart';

// **************************************************************************
// Record test
// **************************************************************************

@ShouldGenerateFile(
  'goldens/zodart_record.dart',
  partOfCurrent: true,
)
@ZodArt.withRecord(outputRecordType: OutputRecord)
abstract class R {
  static final schema = allTypesSchemaDef;
  static const z = _RUtils();
}

// *R************************************************************************
// Existing class test
// **************************************************************************

@ShouldGenerateFile(
  'goldens/zodart_existing_class.dart',
  partOfCurrent: true,
)
@ZodArt.withExistingClass(outputClassType: OutputClass)
abstract class E {
  static final schema = allTypesSchemaDef;
  static const z = _EUtils();
}

// **************************************************************************
// New class test
// **************************************************************************

/// Helper class (normally generated by the pre-type generator)
abstract final class NewClass with _N {}

@ShouldGenerateFile(
  'goldens/zodart_new_class.dart',
  partOfCurrent: true,
)
@ZodArt.generateNewClass(outputClassName: 'NewClass')
abstract class N {
  static final schema = allTypesSchemaDef;
  static const z = _NUtils();
}
